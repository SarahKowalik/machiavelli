<%= javascript_include_tag "cubism.v1" %>
<%= stylesheet_link_tag    "cubism" %>
<%= stylesheet_link_tag    "graphs/horizon" %>

<% width = 600 %>

<div id="horizon_graph" style="position:relative; width:<%=width%>px"></div>

<% def safe_array a; ("['"+a.join("','")+"']").html_safe; end
colours = safe_array Graph::Horizon.get_colours
%>

<script>
	function stopUpdates() { context.stop(); }
	function startUpdates() { context.start(); } 

	delay = Date.now() - (gon.stop* 1000)

	var context = cubism.context()
		.serverDelay(delay)
		.clientDelay(0)
		.step(gon.step*1000) //1e3)
		.size(<%=width%>)
		.stop();

	datum = [];

	nice_metrics = []
	<% @gon.metrics.each do |met| m = met[:metric] %>
		nice_metrics.push("<%=style_metric :pretty, m%>");
	<% end %>

	machiavelli = context.machiavelli(window.location.origin);
	$.each(gon.metrics, function(i,m) {
		datum.push(machiavelli.metric(m.id, nice_metrics[i]));
	});

	d3.select("#horizon_graph").call(function(div) {
		div.append("div")
			.attr("class", "axis")
			.call(context.axis().orient("top"));

		div.selectAll(".horizon")
			.data(datum)
			.enter().append("div")
			.attr("class", "horizon")
			.call(
				context.horizon()
				.height(50)
				.colors(<%=colours%>)
			); 

		div.append("div")
			.attr("class", "rule")
			.call(context.rule());
	});
	// On mousemove, reposition the chart values to match the rule.
	context.on("focus", function(i) {
		d3.selectAll(".value").style("right", i == null ? null : context.size() - i + "px");
	});
</script>
